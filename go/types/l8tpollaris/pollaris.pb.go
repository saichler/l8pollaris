// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.21.12
// source: pollaris.proto

package l8tpollaris

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type L8C_Operation int32

const (
	L8C_Operation_Invalid_Operation L8C_Operation = 0
	L8C_Operation_L8C_Get           L8C_Operation = 1
	L8C_Operation_L8C_Map           L8C_Operation = 2
	L8C_Operation_L8C_Table         L8C_Operation = 3
)

// Enum value maps for L8C_Operation.
var (
	L8C_Operation_name = map[int32]string{
		0: "Invalid_Operation",
		1: "L8C_Get",
		2: "L8C_Map",
		3: "L8C_Table",
	}
	L8C_Operation_value = map[string]int32{
		"Invalid_Operation": 0,
		"L8C_Get":           1,
		"L8C_Map":           2,
		"L8C_Table":         3,
	}
)

func (x L8C_Operation) Enum() *L8C_Operation {
	p := new(L8C_Operation)
	*p = x
	return p
}

func (x L8C_Operation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (L8C_Operation) Descriptor() protoreflect.EnumDescriptor {
	return file_pollaris_proto_enumTypes[0].Descriptor()
}

func (L8C_Operation) Type() protoreflect.EnumType {
	return &file_pollaris_proto_enumTypes[0]
}

func (x L8C_Operation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use L8C_Operation.Descriptor instead.
func (L8C_Operation) EnumDescriptor() ([]byte, []int) {
	return file_pollaris_proto_rawDescGZIP(), []int{0}
}

type L8PProtocol int32

const (
	L8PProtocol_L8PInvalid_Protocol L8PProtocol = 0
	L8PProtocol_L8PSSH              L8PProtocol = 1
	L8PProtocol_L8PPSNMPV2          L8PProtocol = 2
	L8PProtocol_L8PSNMPV3           L8PProtocol = 3
	L8PProtocol_L8PRESTCONF         L8PProtocol = 4
	L8PProtocol_L8PNETCONF          L8PProtocol = 5
	L8PProtocol_L8PGRPC             L8PProtocol = 6
	L8PProtocol_L8PKubectl          L8PProtocol = 7
)

// Enum value maps for L8PProtocol.
var (
	L8PProtocol_name = map[int32]string{
		0: "L8PInvalid_Protocol",
		1: "L8PSSH",
		2: "L8PPSNMPV2",
		3: "L8PSNMPV3",
		4: "L8PRESTCONF",
		5: "L8PNETCONF",
		6: "L8PGRPC",
		7: "L8PKubectl",
	}
	L8PProtocol_value = map[string]int32{
		"L8PInvalid_Protocol": 0,
		"L8PSSH":              1,
		"L8PPSNMPV2":          2,
		"L8PSNMPV3":           3,
		"L8PRESTCONF":         4,
		"L8PNETCONF":          5,
		"L8PGRPC":             6,
		"L8PKubectl":          7,
	}
)

func (x L8PProtocol) Enum() *L8PProtocol {
	p := new(L8PProtocol)
	*p = x
	return p
}

func (x L8PProtocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (L8PProtocol) Descriptor() protoreflect.EnumDescriptor {
	return file_pollaris_proto_enumTypes[1].Descriptor()
}

func (L8PProtocol) Type() protoreflect.EnumType {
	return &file_pollaris_proto_enumTypes[1]
}

func (x L8PProtocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use L8PProtocol.Descriptor instead.
func (L8PProtocol) EnumDescriptor() ([]byte, []int) {
	return file_pollaris_proto_rawDescGZIP(), []int{1}
}

type L8Pollaris struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Vendor   string             `protobuf:"bytes,2,opt,name=vendor,proto3" json:"vendor,omitempty"`
	Series   string             `protobuf:"bytes,3,opt,name=series,proto3" json:"series,omitempty"`
	Family   string             `protobuf:"bytes,4,opt,name=family,proto3" json:"family,omitempty"`
	Software string             `protobuf:"bytes,5,opt,name=software,proto3" json:"software,omitempty"`
	Hardware string             `protobuf:"bytes,6,opt,name=hardware,proto3" json:"hardware,omitempty"`
	Version  string             `protobuf:"bytes,7,opt,name=version,proto3" json:"version,omitempty"`
	Groups   []string           `protobuf:"bytes,8,rep,name=groups,proto3" json:"groups,omitempty"`
	Polling  map[string]*L8Poll `protobuf:"bytes,9,rep,name=polling,proto3" json:"polling,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *L8Pollaris) Reset() {
	*x = L8Pollaris{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pollaris_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *L8Pollaris) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*L8Pollaris) ProtoMessage() {}

func (x *L8Pollaris) ProtoReflect() protoreflect.Message {
	mi := &file_pollaris_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use L8Pollaris.ProtoReflect.Descriptor instead.
func (*L8Pollaris) Descriptor() ([]byte, []int) {
	return file_pollaris_proto_rawDescGZIP(), []int{0}
}

func (x *L8Pollaris) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *L8Pollaris) GetVendor() string {
	if x != nil {
		return x.Vendor
	}
	return ""
}

func (x *L8Pollaris) GetSeries() string {
	if x != nil {
		return x.Series
	}
	return ""
}

func (x *L8Pollaris) GetFamily() string {
	if x != nil {
		return x.Family
	}
	return ""
}

func (x *L8Pollaris) GetSoftware() string {
	if x != nil {
		return x.Software
	}
	return ""
}

func (x *L8Pollaris) GetHardware() string {
	if x != nil {
		return x.Hardware
	}
	return ""
}

func (x *L8Pollaris) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *L8Pollaris) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *L8Pollaris) GetPolling() map[string]*L8Poll {
	if x != nil {
		return x.Polling
	}
	return nil
}

type L8Poll struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	What       string          `protobuf:"bytes,2,opt,name=what,proto3" json:"what,omitempty"`
	Operation  L8C_Operation   `protobuf:"varint,3,opt,name=operation,proto3,enum=l8tpollaris.L8C_Operation" json:"operation,omitempty"`
	Protocol   L8PProtocol     `protobuf:"varint,4,opt,name=protocol,proto3,enum=l8tpollaris.L8PProtocol" json:"protocol,omitempty"`
	Cadence    *L8PCadencePlan `protobuf:"bytes,5,opt,name=cadence,proto3" json:"cadence,omitempty"`
	Timeout    int64           `protobuf:"varint,6,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Attributes []*L8PAttribute `protobuf:"bytes,7,rep,name=attributes,proto3" json:"attributes,omitempty"`
	BodyName   string          `protobuf:"bytes,8,opt,name=bodyName,proto3" json:"bodyName,omitempty"`
	RespName   string          `protobuf:"bytes,9,opt,name=respName,proto3" json:"respName,omitempty"`
	Always     bool            `protobuf:"varint,10,opt,name=always,proto3" json:"always,omitempty"`
}

func (x *L8Poll) Reset() {
	*x = L8Poll{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pollaris_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *L8Poll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*L8Poll) ProtoMessage() {}

func (x *L8Poll) ProtoReflect() protoreflect.Message {
	mi := &file_pollaris_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use L8Poll.ProtoReflect.Descriptor instead.
func (*L8Poll) Descriptor() ([]byte, []int) {
	return file_pollaris_proto_rawDescGZIP(), []int{1}
}

func (x *L8Poll) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *L8Poll) GetWhat() string {
	if x != nil {
		return x.What
	}
	return ""
}

func (x *L8Poll) GetOperation() L8C_Operation {
	if x != nil {
		return x.Operation
	}
	return L8C_Operation_Invalid_Operation
}

func (x *L8Poll) GetProtocol() L8PProtocol {
	if x != nil {
		return x.Protocol
	}
	return L8PProtocol_L8PInvalid_Protocol
}

func (x *L8Poll) GetCadence() *L8PCadencePlan {
	if x != nil {
		return x.Cadence
	}
	return nil
}

func (x *L8Poll) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *L8Poll) GetAttributes() []*L8PAttribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *L8Poll) GetBodyName() string {
	if x != nil {
		return x.BodyName
	}
	return ""
}

func (x *L8Poll) GetRespName() string {
	if x != nil {
		return x.RespName
	}
	return ""
}

func (x *L8Poll) GetAlways() bool {
	if x != nil {
		return x.Always
	}
	return false
}

type L8PAttribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PropertyId string     `protobuf:"bytes,1,opt,name=property_id,json=propertyId,proto3" json:"property_id,omitempty"`
	Rules      []*L8PRule `protobuf:"bytes,2,rep,name=rules,proto3" json:"rules,omitempty"`
}

func (x *L8PAttribute) Reset() {
	*x = L8PAttribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pollaris_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *L8PAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*L8PAttribute) ProtoMessage() {}

func (x *L8PAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_pollaris_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use L8PAttribute.ProtoReflect.Descriptor instead.
func (*L8PAttribute) Descriptor() ([]byte, []int) {
	return file_pollaris_proto_rawDescGZIP(), []int{2}
}

func (x *L8PAttribute) GetPropertyId() string {
	if x != nil {
		return x.PropertyId
	}
	return ""
}

func (x *L8PAttribute) GetRules() []*L8PRule {
	if x != nil {
		return x.Rules
	}
	return nil
}

type L8PRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string                   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Params map[string]*L8PParameter `protobuf:"bytes,2,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *L8PRule) Reset() {
	*x = L8PRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pollaris_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *L8PRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*L8PRule) ProtoMessage() {}

func (x *L8PRule) ProtoReflect() protoreflect.Message {
	mi := &file_pollaris_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use L8PRule.ProtoReflect.Descriptor instead.
func (*L8PRule) Descriptor() ([]byte, []int) {
	return file_pollaris_proto_rawDescGZIP(), []int{3}
}

func (x *L8PRule) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *L8PRule) GetParams() map[string]*L8PParameter {
	if x != nil {
		return x.Params
	}
	return nil
}

type L8PParameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *L8PParameter) Reset() {
	*x = L8PParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pollaris_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *L8PParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*L8PParameter) ProtoMessage() {}

func (x *L8PParameter) ProtoReflect() protoreflect.Message {
	mi := &file_pollaris_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use L8PParameter.ProtoReflect.Descriptor instead.
func (*L8PParameter) Descriptor() ([]byte, []int) {
	return file_pollaris_proto_rawDescGZIP(), []int{4}
}

func (x *L8PParameter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *L8PParameter) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type L8PCadencePlan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cadences []int64 `protobuf:"varint,1,rep,packed,name=cadences,proto3" json:"cadences,omitempty"`
	Startups []int64 `protobuf:"varint,2,rep,packed,name=startups,proto3" json:"startups,omitempty"`
	Current  int32   `protobuf:"varint,3,opt,name=current,proto3" json:"current,omitempty"`
	Enabled  bool    `protobuf:"varint,4,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *L8PCadencePlan) Reset() {
	*x = L8PCadencePlan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pollaris_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *L8PCadencePlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*L8PCadencePlan) ProtoMessage() {}

func (x *L8PCadencePlan) ProtoReflect() protoreflect.Message {
	mi := &file_pollaris_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use L8PCadencePlan.ProtoReflect.Descriptor instead.
func (*L8PCadencePlan) Descriptor() ([]byte, []int) {
	return file_pollaris_proto_rawDescGZIP(), []int{5}
}

func (x *L8PCadencePlan) GetCadences() []int64 {
	if x != nil {
		return x.Cadences
	}
	return nil
}

func (x *L8PCadencePlan) GetStartups() []int64 {
	if x != nil {
		return x.Startups
	}
	return nil
}

func (x *L8PCadencePlan) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *L8PCadencePlan) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

var File_pollaris_proto protoreflect.FileDescriptor

var file_pollaris_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x70, 0x6f, 0x6c, 0x6c, 0x61, 0x72, 0x69, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0b, 0x6c, 0x38, 0x74, 0x70, 0x6f, 0x6c, 0x6c, 0x61, 0x72, 0x69, 0x73, 0x22, 0xe3, 0x02,
	0x0a, 0x0a, 0x4c, 0x38, 0x50, 0x6f, 0x6c, 0x6c, 0x61, 0x72, 0x69, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6f, 0x66, 0x74,
	0x77, 0x61, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x66, 0x74,
	0x77, 0x61, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x12, 0x3e, 0x0a, 0x07, 0x70, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6c, 0x38, 0x74, 0x70, 0x6f, 0x6c, 0x6c, 0x61, 0x72, 0x69,
	0x73, 0x2e, 0x4c, 0x38, 0x50, 0x6f, 0x6c, 0x6c, 0x61, 0x72, 0x69, 0x73, 0x2e, 0x50, 0x6f, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x70, 0x6f, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x1a, 0x4f, 0x0a, 0x0c, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x29, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6c, 0x38, 0x74, 0x70, 0x6f, 0x6c, 0x6c, 0x61, 0x72, 0x69,
	0x73, 0x2e, 0x4c, 0x38, 0x50, 0x6f, 0x6c, 0x6c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0xfc, 0x02, 0x0a, 0x06, 0x4c, 0x38, 0x50, 0x6f, 0x6c, 0x6c, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x68, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x77, 0x68, 0x61, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6c, 0x38, 0x74, 0x70,
	0x6f, 0x6c, 0x6c, 0x61, 0x72, 0x69, 0x73, 0x2e, 0x4c, 0x38, 0x43, 0x5f, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x34, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6c, 0x38, 0x74, 0x70, 0x6f, 0x6c, 0x6c, 0x61, 0x72, 0x69, 0x73,
	0x2e, 0x4c, 0x38, 0x50, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x35, 0x0a, 0x07, 0x63, 0x61, 0x64, 0x65, 0x6e, 0x63,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6c, 0x38, 0x74, 0x70, 0x6f, 0x6c,
	0x6c, 0x61, 0x72, 0x69, 0x73, 0x2e, 0x4c, 0x38, 0x50, 0x43, 0x61, 0x64, 0x65, 0x6e, 0x63, 0x65,
	0x50, 0x6c, 0x61, 0x6e, 0x52, 0x07, 0x63, 0x61, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x38,
	0x74, 0x70, 0x6f, 0x6c, 0x6c, 0x61, 0x72, 0x69, 0x73, 0x2e, 0x4c, 0x38, 0x50, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x6f, 0x64, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6f, 0x64, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6c,
	0x77, 0x61, 0x79, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x6c, 0x77, 0x61,
	0x79, 0x73, 0x22, 0x5b, 0x0a, 0x0c, 0x4c, 0x38, 0x50, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x38, 0x74, 0x70, 0x6f, 0x6c, 0x6c, 0x61, 0x72, 0x69, 0x73,
	0x2e, 0x4c, 0x38, 0x50, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x22,
	0xad, 0x01, 0x0a, 0x07, 0x4c, 0x38, 0x50, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x38, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x6c, 0x38, 0x74, 0x70, 0x6f, 0x6c, 0x6c, 0x61, 0x72, 0x69, 0x73, 0x2e, 0x4c, 0x38,
	0x50, 0x52, 0x75, 0x6c, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x54, 0x0a, 0x0b, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2f, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x38, 0x74, 0x70,
	0x6f, 0x6c, 0x6c, 0x61, 0x72, 0x69, 0x73, 0x2e, 0x4c, 0x38, 0x50, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x38, 0x0a, 0x0c, 0x4c, 0x38, 0x50, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x7c, 0x0a, 0x0e, 0x4c, 0x38, 0x50,
	0x43, 0x61, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x61, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x08, 0x63,
	0x61, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x75, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x75, 0x70, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x2a, 0x4f, 0x0a, 0x0d, 0x4c, 0x38, 0x43, 0x5f, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x6e, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x5f, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x07, 0x4c, 0x38, 0x43, 0x5f, 0x47, 0x65, 0x74, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07,
	0x4c, 0x38, 0x43, 0x5f, 0x4d, 0x61, 0x70, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x4c, 0x38, 0x43,
	0x5f, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x10, 0x03, 0x2a, 0x8f, 0x01, 0x0a, 0x0b, 0x4c, 0x38, 0x50,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x17, 0x0a, 0x13, 0x4c, 0x38, 0x50, 0x49,
	0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x10,
	0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4c, 0x38, 0x50, 0x53, 0x53, 0x48, 0x10, 0x01, 0x12, 0x0e, 0x0a,
	0x0a, 0x4c, 0x38, 0x50, 0x50, 0x53, 0x4e, 0x4d, 0x50, 0x56, 0x32, 0x10, 0x02, 0x12, 0x0d, 0x0a,
	0x09, 0x4c, 0x38, 0x50, 0x53, 0x4e, 0x4d, 0x50, 0x56, 0x33, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b,
	0x4c, 0x38, 0x50, 0x52, 0x45, 0x53, 0x54, 0x43, 0x4f, 0x4e, 0x46, 0x10, 0x04, 0x12, 0x0e, 0x0a,
	0x0a, 0x4c, 0x38, 0x50, 0x4e, 0x45, 0x54, 0x43, 0x4f, 0x4e, 0x46, 0x10, 0x05, 0x12, 0x0b, 0x0a,
	0x07, 0x4c, 0x38, 0x50, 0x47, 0x52, 0x50, 0x43, 0x10, 0x06, 0x12, 0x0e, 0x0a, 0x0a, 0x4c, 0x38,
	0x50, 0x4b, 0x75, 0x62, 0x65, 0x63, 0x74, 0x6c, 0x10, 0x07, 0x42, 0x3b, 0x0a, 0x15, 0x63, 0x6f,
	0x6d, 0x2e, 0x6c, 0x38, 0x74, 0x70, 0x6f, 0x6c, 0x6c, 0x61, 0x72, 0x69, 0x73, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x42, 0x0b, 0x4c, 0x38, 0x54, 0x50, 0x6f, 0x6c, 0x6c, 0x61, 0x72, 0x69, 0x73,
	0x50, 0x01, 0x5a, 0x13, 0x2e, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x6c, 0x38, 0x74, 0x70,
	0x6f, 0x6c, 0x6c, 0x61, 0x72, 0x69, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pollaris_proto_rawDescOnce sync.Once
	file_pollaris_proto_rawDescData = file_pollaris_proto_rawDesc
)

func file_pollaris_proto_rawDescGZIP() []byte {
	file_pollaris_proto_rawDescOnce.Do(func() {
		file_pollaris_proto_rawDescData = protoimpl.X.CompressGZIP(file_pollaris_proto_rawDescData)
	})
	return file_pollaris_proto_rawDescData
}

var file_pollaris_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_pollaris_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_pollaris_proto_goTypes = []interface{}{
	(L8C_Operation)(0),     // 0: l8tpollaris.L8C_Operation
	(L8PProtocol)(0),       // 1: l8tpollaris.L8PProtocol
	(*L8Pollaris)(nil),     // 2: l8tpollaris.L8Pollaris
	(*L8Poll)(nil),         // 3: l8tpollaris.L8Poll
	(*L8PAttribute)(nil),   // 4: l8tpollaris.L8PAttribute
	(*L8PRule)(nil),        // 5: l8tpollaris.L8PRule
	(*L8PParameter)(nil),   // 6: l8tpollaris.L8PParameter
	(*L8PCadencePlan)(nil), // 7: l8tpollaris.L8PCadencePlan
	nil,                    // 8: l8tpollaris.L8Pollaris.PollingEntry
	nil,                    // 9: l8tpollaris.L8PRule.ParamsEntry
}
var file_pollaris_proto_depIdxs = []int32{
	8, // 0: l8tpollaris.L8Pollaris.polling:type_name -> l8tpollaris.L8Pollaris.PollingEntry
	0, // 1: l8tpollaris.L8Poll.operation:type_name -> l8tpollaris.L8C_Operation
	1, // 2: l8tpollaris.L8Poll.protocol:type_name -> l8tpollaris.L8PProtocol
	7, // 3: l8tpollaris.L8Poll.cadence:type_name -> l8tpollaris.L8PCadencePlan
	4, // 4: l8tpollaris.L8Poll.attributes:type_name -> l8tpollaris.L8PAttribute
	5, // 5: l8tpollaris.L8PAttribute.rules:type_name -> l8tpollaris.L8PRule
	9, // 6: l8tpollaris.L8PRule.params:type_name -> l8tpollaris.L8PRule.ParamsEntry
	3, // 7: l8tpollaris.L8Pollaris.PollingEntry.value:type_name -> l8tpollaris.L8Poll
	6, // 8: l8tpollaris.L8PRule.ParamsEntry.value:type_name -> l8tpollaris.L8PParameter
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_pollaris_proto_init() }
func file_pollaris_proto_init() {
	if File_pollaris_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pollaris_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*L8Pollaris); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pollaris_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*L8Poll); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pollaris_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*L8PAttribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pollaris_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*L8PRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pollaris_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*L8PParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pollaris_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*L8PCadencePlan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pollaris_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pollaris_proto_goTypes,
		DependencyIndexes: file_pollaris_proto_depIdxs,
		EnumInfos:         file_pollaris_proto_enumTypes,
		MessageInfos:      file_pollaris_proto_msgTypes,
	}.Build()
	File_pollaris_proto = out.File
	file_pollaris_proto_rawDesc = nil
	file_pollaris_proto_goTypes = nil
	file_pollaris_proto_depIdxs = nil
}
