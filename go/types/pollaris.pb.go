// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.21.12
// source: pollaris.proto

package types

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Operation int32

const (
	Operation_Invalid_Operation Operation = 0
	Operation_OGet              Operation = 1
	Operation_OMap              Operation = 2
	Operation_OTable            Operation = 3
)

// Enum value maps for Operation.
var (
	Operation_name = map[int32]string{
		0: "Invalid_Operation",
		1: "OGet",
		2: "OMap",
		3: "OTable",
	}
	Operation_value = map[string]int32{
		"Invalid_Operation": 0,
		"OGet":              1,
		"OMap":              2,
		"OTable":            3,
	}
)

func (x Operation) Enum() *Operation {
	p := new(Operation)
	*p = x
	return p
}

func (x Operation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Operation) Descriptor() protoreflect.EnumDescriptor {
	return file_pollaris_proto_enumTypes[0].Descriptor()
}

func (Operation) Type() protoreflect.EnumType {
	return &file_pollaris_proto_enumTypes[0]
}

func (x Operation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Operation.Descriptor instead.
func (Operation) EnumDescriptor() ([]byte, []int) {
	return file_pollaris_proto_rawDescGZIP(), []int{0}
}

type Protocol int32

const (
	Protocol_PInvalid_Protocol Protocol = 0
	Protocol_PSSH              Protocol = 1
	Protocol_PSNMPV2           Protocol = 2
	Protocol_PSNMPV3           Protocol = 3
	Protocol_PRESTCONF         Protocol = 4
	Protocol_PNETCONF          Protocol = 5
	Protocol_PGRPC             Protocol = 6
	Protocol_PK8s              Protocol = 7
)

// Enum value maps for Protocol.
var (
	Protocol_name = map[int32]string{
		0: "PInvalid_Protocol",
		1: "PSSH",
		2: "PSNMPV2",
		3: "PSNMPV3",
		4: "PRESTCONF",
		5: "PNETCONF",
		6: "PGRPC",
		7: "PK8s",
	}
	Protocol_value = map[string]int32{
		"PInvalid_Protocol": 0,
		"PSSH":              1,
		"PSNMPV2":           2,
		"PSNMPV3":           3,
		"PRESTCONF":         4,
		"PNETCONF":          5,
		"PGRPC":             6,
		"PK8s":              7,
	}
)

func (x Protocol) Enum() *Protocol {
	p := new(Protocol)
	*p = x
	return p
}

func (x Protocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Protocol) Descriptor() protoreflect.EnumDescriptor {
	return file_pollaris_proto_enumTypes[1].Descriptor()
}

func (Protocol) Type() protoreflect.EnumType {
	return &file_pollaris_proto_enumTypes[1]
}

func (x Protocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Protocol.Descriptor instead.
func (Protocol) EnumDescriptor() ([]byte, []int) {
	return file_pollaris_proto_rawDescGZIP(), []int{1}
}

type Pollaris struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string           `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Vendor   string           `protobuf:"bytes,2,opt,name=vendor,proto3" json:"vendor,omitempty"`
	Series   string           `protobuf:"bytes,3,opt,name=series,proto3" json:"series,omitempty"`
	Family   string           `protobuf:"bytes,4,opt,name=family,proto3" json:"family,omitempty"`
	Software string           `protobuf:"bytes,5,opt,name=software,proto3" json:"software,omitempty"`
	Hardware string           `protobuf:"bytes,6,opt,name=hardware,proto3" json:"hardware,omitempty"`
	Version  string           `protobuf:"bytes,7,opt,name=version,proto3" json:"version,omitempty"`
	Groups   []string         `protobuf:"bytes,8,rep,name=groups,proto3" json:"groups,omitempty"`
	Polling  map[string]*Poll `protobuf:"bytes,9,rep,name=polling,proto3" json:"polling,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Pollaris) Reset() {
	*x = Pollaris{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pollaris_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pollaris) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pollaris) ProtoMessage() {}

func (x *Pollaris) ProtoReflect() protoreflect.Message {
	mi := &file_pollaris_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pollaris.ProtoReflect.Descriptor instead.
func (*Pollaris) Descriptor() ([]byte, []int) {
	return file_pollaris_proto_rawDescGZIP(), []int{0}
}

func (x *Pollaris) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Pollaris) GetVendor() string {
	if x != nil {
		return x.Vendor
	}
	return ""
}

func (x *Pollaris) GetSeries() string {
	if x != nil {
		return x.Series
	}
	return ""
}

func (x *Pollaris) GetFamily() string {
	if x != nil {
		return x.Family
	}
	return ""
}

func (x *Pollaris) GetSoftware() string {
	if x != nil {
		return x.Software
	}
	return ""
}

func (x *Pollaris) GetHardware() string {
	if x != nil {
		return x.Hardware
	}
	return ""
}

func (x *Pollaris) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Pollaris) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *Pollaris) GetPolling() map[string]*Poll {
	if x != nil {
		return x.Polling
	}
	return nil
}

type Poll struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	What       string       `protobuf:"bytes,2,opt,name=what,proto3" json:"what,omitempty"`
	Operation  Operation    `protobuf:"varint,3,opt,name=operation,proto3,enum=types.Operation" json:"operation,omitempty"`
	Protocol   Protocol     `protobuf:"varint,4,opt,name=protocol,proto3,enum=types.Protocol" json:"protocol,omitempty"`
	Cadence    *CadencePlan `protobuf:"bytes,5,opt,name=cadence,proto3" json:"cadence,omitempty"`
	Timeout    int64        `protobuf:"varint,6,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Attributes []*Attribute `protobuf:"bytes,7,rep,name=attributes,proto3" json:"attributes,omitempty"`
}

func (x *Poll) Reset() {
	*x = Poll{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pollaris_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Poll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Poll) ProtoMessage() {}

func (x *Poll) ProtoReflect() protoreflect.Message {
	mi := &file_pollaris_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Poll.ProtoReflect.Descriptor instead.
func (*Poll) Descriptor() ([]byte, []int) {
	return file_pollaris_proto_rawDescGZIP(), []int{1}
}

func (x *Poll) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Poll) GetWhat() string {
	if x != nil {
		return x.What
	}
	return ""
}

func (x *Poll) GetOperation() Operation {
	if x != nil {
		return x.Operation
	}
	return Operation_Invalid_Operation
}

func (x *Poll) GetProtocol() Protocol {
	if x != nil {
		return x.Protocol
	}
	return Protocol_PInvalid_Protocol
}

func (x *Poll) GetCadence() *CadencePlan {
	if x != nil {
		return x.Cadence
	}
	return nil
}

func (x *Poll) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *Poll) GetAttributes() []*Attribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type Attribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PropertyId string  `protobuf:"bytes,1,opt,name=property_id,json=propertyId,proto3" json:"property_id,omitempty"`
	Rules      []*Rule `protobuf:"bytes,2,rep,name=rules,proto3" json:"rules,omitempty"`
}

func (x *Attribute) Reset() {
	*x = Attribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pollaris_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attribute) ProtoMessage() {}

func (x *Attribute) ProtoReflect() protoreflect.Message {
	mi := &file_pollaris_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attribute.ProtoReflect.Descriptor instead.
func (*Attribute) Descriptor() ([]byte, []int) {
	return file_pollaris_proto_rawDescGZIP(), []int{2}
}

func (x *Attribute) GetPropertyId() string {
	if x != nil {
		return x.PropertyId
	}
	return ""
}

func (x *Attribute) GetRules() []*Rule {
	if x != nil {
		return x.Rules
	}
	return nil
}

type Rule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Params map[string]*Parameter `protobuf:"bytes,2,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Rule) Reset() {
	*x = Rule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pollaris_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rule) ProtoMessage() {}

func (x *Rule) ProtoReflect() protoreflect.Message {
	mi := &file_pollaris_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rule.ProtoReflect.Descriptor instead.
func (*Rule) Descriptor() ([]byte, []int) {
	return file_pollaris_proto_rawDescGZIP(), []int{3}
}

func (x *Rule) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Rule) GetParams() map[string]*Parameter {
	if x != nil {
		return x.Params
	}
	return nil
}

type Parameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Parameter) Reset() {
	*x = Parameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pollaris_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Parameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Parameter) ProtoMessage() {}

func (x *Parameter) ProtoReflect() protoreflect.Message {
	mi := &file_pollaris_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Parameter.ProtoReflect.Descriptor instead.
func (*Parameter) Descriptor() ([]byte, []int) {
	return file_pollaris_proto_rawDescGZIP(), []int{4}
}

func (x *Parameter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Parameter) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type CadencePlan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cadences []int64 `protobuf:"varint,1,rep,packed,name=cadences,proto3" json:"cadences,omitempty"`
	Startups []int64 `protobuf:"varint,2,rep,packed,name=startups,proto3" json:"startups,omitempty"`
	Current  int32   `protobuf:"varint,3,opt,name=current,proto3" json:"current,omitempty"`
	Enabled  bool    `protobuf:"varint,4,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *CadencePlan) Reset() {
	*x = CadencePlan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pollaris_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CadencePlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CadencePlan) ProtoMessage() {}

func (x *CadencePlan) ProtoReflect() protoreflect.Message {
	mi := &file_pollaris_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CadencePlan.ProtoReflect.Descriptor instead.
func (*CadencePlan) Descriptor() ([]byte, []int) {
	return file_pollaris_proto_rawDescGZIP(), []int{5}
}

func (x *CadencePlan) GetCadences() []int64 {
	if x != nil {
		return x.Cadences
	}
	return nil
}

func (x *CadencePlan) GetStartups() []int64 {
	if x != nil {
		return x.Startups
	}
	return nil
}

func (x *CadencePlan) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *CadencePlan) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

var File_pollaris_proto protoreflect.FileDescriptor

var file_pollaris_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x70, 0x6f, 0x6c, 0x6c, 0x61, 0x72, 0x69, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x22, 0xd1, 0x02, 0x0a, 0x08, 0x50, 0x6f, 0x6c, 0x6c,
	0x61, 0x72, 0x69, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x6d, 0x69,
	0x6c, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x36, 0x0a, 0x07, 0x70, 0x6f,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x61, 0x72, 0x69, 0x73, 0x2e, 0x50, 0x6f, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x70, 0x6f, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x1a, 0x47, 0x0a, 0x0c, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6f, 0x6c, 0x6c,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x85, 0x02, 0x0a, 0x04,
	0x50, 0x6f, 0x6c, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x68, 0x61, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x77, 0x68, 0x61, 0x74, 0x12, 0x2e, 0x0a, 0x09,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x10, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x52,
	0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x61, 0x64,
	0x65, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x43, 0x61, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x07,
	0x63, 0x61, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x12, 0x30, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x22, 0x4f, 0x0a, 0x09, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x05, 0x72,
	0x75, 0x6c, 0x65, 0x73, 0x22, 0x98, 0x01, 0x0a, 0x04, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x2f, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x2e, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x1a, 0x4b, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x35, 0x0a, 0x09, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x79, 0x0a, 0x0b, 0x43, 0x61, 0x64, 0x65, 0x6e, 0x63,
	0x65, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x64, 0x65, 0x6e, 0x63, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x08, 0x63, 0x61, 0x64, 0x65, 0x6e, 0x63, 0x65,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x2a, 0x42, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15,
	0x0a, 0x11, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4f, 0x47, 0x65, 0x74, 0x10, 0x01, 0x12,
	0x08, 0x0a, 0x04, 0x4f, 0x4d, 0x61, 0x70, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x10, 0x03, 0x2a, 0x77, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x53, 0x53, 0x48,
	0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x53, 0x4e, 0x4d, 0x50, 0x56, 0x32, 0x10, 0x02, 0x12,
	0x0b, 0x0a, 0x07, 0x50, 0x53, 0x4e, 0x4d, 0x50, 0x56, 0x33, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09,
	0x50, 0x52, 0x45, 0x53, 0x54, 0x43, 0x4f, 0x4e, 0x46, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x50,
	0x4e, 0x45, 0x54, 0x43, 0x4f, 0x4e, 0x46, 0x10, 0x05, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x47, 0x52,
	0x50, 0x43, 0x10, 0x06, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x4b, 0x38, 0x73, 0x10, 0x07, 0x42, 0x26,
	0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x6f, 0x6c, 0x6c, 0x61, 0x72, 0x69, 0x73, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x42, 0x05, 0x54, 0x79, 0x70, 0x65, 0x73, 0x50, 0x01, 0x5a, 0x07, 0x2e,
	0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pollaris_proto_rawDescOnce sync.Once
	file_pollaris_proto_rawDescData = file_pollaris_proto_rawDesc
)

func file_pollaris_proto_rawDescGZIP() []byte {
	file_pollaris_proto_rawDescOnce.Do(func() {
		file_pollaris_proto_rawDescData = protoimpl.X.CompressGZIP(file_pollaris_proto_rawDescData)
	})
	return file_pollaris_proto_rawDescData
}

var file_pollaris_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_pollaris_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_pollaris_proto_goTypes = []interface{}{
	(Operation)(0),      // 0: types.Operation
	(Protocol)(0),       // 1: types.Protocol
	(*Pollaris)(nil),    // 2: types.Pollaris
	(*Poll)(nil),        // 3: types.Poll
	(*Attribute)(nil),   // 4: types.Attribute
	(*Rule)(nil),        // 5: types.Rule
	(*Parameter)(nil),   // 6: types.Parameter
	(*CadencePlan)(nil), // 7: types.CadencePlan
	nil,                 // 8: types.Pollaris.PollingEntry
	nil,                 // 9: types.Rule.ParamsEntry
}
var file_pollaris_proto_depIdxs = []int32{
	8, // 0: types.Pollaris.polling:type_name -> types.Pollaris.PollingEntry
	0, // 1: types.Poll.operation:type_name -> types.Operation
	1, // 2: types.Poll.protocol:type_name -> types.Protocol
	7, // 3: types.Poll.cadence:type_name -> types.CadencePlan
	4, // 4: types.Poll.attributes:type_name -> types.Attribute
	5, // 5: types.Attribute.rules:type_name -> types.Rule
	9, // 6: types.Rule.params:type_name -> types.Rule.ParamsEntry
	3, // 7: types.Pollaris.PollingEntry.value:type_name -> types.Poll
	6, // 8: types.Rule.ParamsEntry.value:type_name -> types.Parameter
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_pollaris_proto_init() }
func file_pollaris_proto_init() {
	if File_pollaris_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pollaris_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pollaris); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pollaris_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Poll); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pollaris_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pollaris_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pollaris_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Parameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pollaris_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CadencePlan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pollaris_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pollaris_proto_goTypes,
		DependencyIndexes: file_pollaris_proto_depIdxs,
		EnumInfos:         file_pollaris_proto_enumTypes,
		MessageInfos:      file_pollaris_proto_msgTypes,
	}.Build()
	File_pollaris_proto = out.File
	file_pollaris_proto_rawDesc = nil
	file_pollaris_proto_goTypes = nil
	file_pollaris_proto_depIdxs = nil
}
