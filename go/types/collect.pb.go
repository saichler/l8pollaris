// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.21.12
// source: collect.proto

package types

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CJob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error        string             `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Result       []byte             `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	Started      int64              `protobuf:"varint,3,opt,name=started,proto3" json:"started,omitempty"`
	Ended        int64              `protobuf:"varint,4,opt,name=ended,proto3" json:"ended,omitempty"`
	Cadence      *CadencePlan       `protobuf:"bytes,5,opt,name=cadence,proto3" json:"cadence,omitempty"`
	Timeout      int64              `protobuf:"varint,6,opt,name=timeout,proto3" json:"timeout,omitempty"`
	DeviceId     string             `protobuf:"bytes,7,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	HostId       string             `protobuf:"bytes,8,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	PollarisName string             `protobuf:"bytes,9,opt,name=pollaris_name,json=pollarisName,proto3" json:"pollaris_name,omitempty"`
	JobName      string             `protobuf:"bytes,10,opt,name=job_name,json=jobName,proto3" json:"job_name,omitempty"`
	IService     *DeviceServiceInfo `protobuf:"bytes,11,opt,name=iService,proto3" json:"iService,omitempty"`
	PService     *DeviceServiceInfo `protobuf:"bytes,12,opt,name=pService,proto3" json:"pService,omitempty"`
	Arguments    map[string]string  `protobuf:"bytes,13,rep,name=arguments,proto3" json:"arguments,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	LastResult   []byte             `protobuf:"bytes,14,opt,name=lastResult,proto3" json:"lastResult,omitempty"`
	ErrorCount   int32              `protobuf:"varint,15,opt,name=error_count,json=errorCount,proto3" json:"error_count,omitempty"`
}

func (x *CJob) Reset() {
	*x = CJob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collect_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CJob) ProtoMessage() {}

func (x *CJob) ProtoReflect() protoreflect.Message {
	mi := &file_collect_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CJob.ProtoReflect.Descriptor instead.
func (*CJob) Descriptor() ([]byte, []int) {
	return file_collect_proto_rawDescGZIP(), []int{0}
}

func (x *CJob) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *CJob) GetResult() []byte {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *CJob) GetStarted() int64 {
	if x != nil {
		return x.Started
	}
	return 0
}

func (x *CJob) GetEnded() int64 {
	if x != nil {
		return x.Ended
	}
	return 0
}

func (x *CJob) GetCadence() *CadencePlan {
	if x != nil {
		return x.Cadence
	}
	return nil
}

func (x *CJob) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *CJob) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *CJob) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *CJob) GetPollarisName() string {
	if x != nil {
		return x.PollarisName
	}
	return ""
}

func (x *CJob) GetJobName() string {
	if x != nil {
		return x.JobName
	}
	return ""
}

func (x *CJob) GetIService() *DeviceServiceInfo {
	if x != nil {
		return x.IService
	}
	return nil
}

func (x *CJob) GetPService() *DeviceServiceInfo {
	if x != nil {
		return x.PService
	}
	return nil
}

func (x *CJob) GetArguments() map[string]string {
	if x != nil {
		return x.Arguments
	}
	return nil
}

func (x *CJob) GetLastResult() []byte {
	if x != nil {
		return x.LastResult
	}
	return nil
}

func (x *CJob) GetErrorCount() int32 {
	if x != nil {
		return x.ErrorCount
	}
	return 0
}

type CadencePlan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cadences []int64 `protobuf:"varint,1,rep,packed,name=cadences,proto3" json:"cadences,omitempty"`
	Current  int32   `protobuf:"varint,2,opt,name=current,proto3" json:"current,omitempty"`
}

func (x *CadencePlan) Reset() {
	*x = CadencePlan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collect_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CadencePlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CadencePlan) ProtoMessage() {}

func (x *CadencePlan) ProtoReflect() protoreflect.Message {
	mi := &file_collect_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CadencePlan.ProtoReflect.Descriptor instead.
func (*CadencePlan) Descriptor() ([]byte, []int) {
	return file_collect_proto_rawDescGZIP(), []int{1}
}

func (x *CadencePlan) GetCadences() []int64 {
	if x != nil {
		return x.Cadences
	}
	return nil
}

func (x *CadencePlan) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

var File_collect_proto protoreflect.FileDescriptor

var file_collect_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x1a, 0x0d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc7, 0x04, 0x0a, 0x04, 0x43, 0x4a, 0x6f, 0x62, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x07,
	0x63, 0x61, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x50, 0x6c, 0x61,
	0x6e, 0x52, 0x07, 0x63, 0x61, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x6f,
	0x6c, 0x6c, 0x61, 0x72, 0x69, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x70, 0x6f, 0x6c, 0x6c, 0x61, 0x72, 0x69, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x6a, 0x6f, 0x62, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x08, 0x69, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x69, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x34, 0x0a, 0x08, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x70, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x43, 0x4a, 0x6f, 0x62, 0x2e, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x1a, 0x3c, 0x0a, 0x0e, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x43, 0x0a, 0x0b, 0x43, 0x61, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x61, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x08, 0x63, 0x61, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x42, 0x22, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x2e, 0x6a, 0x6f, 0x62, 0x73,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x42, 0x05, 0x54, 0x79, 0x70, 0x65, 0x73, 0x50, 0x01, 0x5a,
	0x07, 0x2e, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_collect_proto_rawDescOnce sync.Once
	file_collect_proto_rawDescData = file_collect_proto_rawDesc
)

func file_collect_proto_rawDescGZIP() []byte {
	file_collect_proto_rawDescOnce.Do(func() {
		file_collect_proto_rawDescData = protoimpl.X.CompressGZIP(file_collect_proto_rawDescData)
	})
	return file_collect_proto_rawDescData
}

var file_collect_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_collect_proto_goTypes = []interface{}{
	(*CJob)(nil),              // 0: types.CJob
	(*CadencePlan)(nil),       // 1: types.CadencePlan
	nil,                       // 2: types.CJob.ArgumentsEntry
	(*DeviceServiceInfo)(nil), // 3: types.DeviceServiceInfo
}
var file_collect_proto_depIdxs = []int32{
	1, // 0: types.CJob.cadence:type_name -> types.CadencePlan
	3, // 1: types.CJob.iService:type_name -> types.DeviceServiceInfo
	3, // 2: types.CJob.pService:type_name -> types.DeviceServiceInfo
	2, // 3: types.CJob.arguments:type_name -> types.CJob.ArgumentsEntry
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_collect_proto_init() }
func file_collect_proto_init() {
	if File_collect_proto != nil {
		return
	}
	file_devices_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_collect_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CJob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collect_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CadencePlan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_collect_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_collect_proto_goTypes,
		DependencyIndexes: file_collect_proto_depIdxs,
		MessageInfos:      file_collect_proto_msgTypes,
	}.Build()
	File_collect_proto = out.File
	file_collect_proto_rawDesc = nil
	file_collect_proto_goTypes = nil
	file_collect_proto_depIdxs = nil
}
